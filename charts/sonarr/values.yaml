replicaCount: 1

image:
  repository: lscr.io/linuxserver/sonarr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag:

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

# -- Using Recreate strategy because:
# - The config volume contains a SQLite database
# - SQLite requires exclusive write access
# - ReadWriteOnce PVC can only be mounted by one pod at a time
# - During updates, we need the old pod to terminate completely before the new one starts
strategyType: Recreate

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 8989

dnsConfig:
  options:
    - name: ndots
      value: '1'

ingress:
  enabled: false
  className: ''
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: example-tls
  #    hosts:
  #      - example.local

persistence:
  config:
    enabled: false
    # -- Sets the persistence type
    # Valid options are pvc, emptyDir, hostPath, secret, configMap or custom
    type: pvc

    # -- Where to mount the volume in the main container.
    # Defaults to `/<name_of_the_volume>`,
    # setting to '-' creates the volume but disables the volumeMount.
    mountPath: /config
    # -- Specify if the volume should be mounted read-only.
    readOnly: false
    # -- Override the name suffix that is used for this volume.
    nameOverride:

    # -- Storage Class for the config volume.
    # If set to `-`, dynamic provisioning is disabled.
    # If set to something else, the given storageClass is used.
    # If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner.
    storageClass: # "-"

    # -- If you want to reuse an existing claim, the name of the existing PVC can be passed here.
    existingClaim: # your-claim

    # -- Used in conjunction with `existingClaim`. Specifies a sub-path inside the referenced volume instead of its root
    subPath: # some-subpath

    # -- AccessMode for the persistent volume.
    # Make sure to select an access mode that is supported by your storage provider!
    # [[ref]](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
    accessMode: ReadWriteOnce

    # -- The amount of storage that is requested for the persistent volume.
    size: 1Gi

    # -- Set to true to retain the PVC upon `helm uninstall`
    retain: false

    # -- Additional labels for the PVC
    extraLabels: {}

  media:
    enabled: false
    type: pvc
    mountPath: /media
    readOnly: false
    nameOverride:
    storageClass: # "-"
    existingClaim: # your-claim
    subPath: # some-subpath
    accessMode: ReadWriteMany
    size: 50Gi
    retain: false
    extraLabels: {}

  downloads:
    enabled: false
    type: pvc
    mountPath: /downloads
    readOnly: false
    nameOverride:
    storageClass: # "-"
    existingClaim: # your-claim
    subPath: # some-subpath
    accessMode: ReadWriteMany
    size: 50Gi
    retain: false
    extraLabels: {}

env:
  - name: TZ
    value: UTC

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

probes:
  liveness:
    enabled: true
    spec:
      httpGet:
        path: /ping
        port: http
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 5

  readiness:
    enabled: true
    spec:
      httpGet:
        path: /ping
        port: http
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 5

  startup:
    enabled: true
    spec:
      httpGet:
        path: /ping
        port: http
      initialDelaySeconds: 0
      timeoutSeconds: 1
      ## This means it has a maximum of 5*30=150 seconds to start up before it fails
      periodSeconds: 5
      failureThreshold: 30

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Add volume permissions init container
volumePermissions:
  enabled: true
  securityContext:
    runAsUser: 0
  image:
    repository: busybox
    tag: latest
    pullPolicy: IfNotPresent
