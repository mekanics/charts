# Default values for paperless.

# Number of old ReplicaSets to retain for rollback purposes
revisionHistoryLimit: 3

image:
  repository: ghcr.io/paperless-ngx/paperless-ngx
  pullPolicy: IfNotPresent
  # -- The docker tag, if left empty chart's appVersion will be used.
  # @default -- `.Chart.AppVersion`
  tag: ''

nameOverride: ''
fullnameOverride: ''

strategyType: RollingUpdate

controller:
  kind: Deployment
  # -- The number of replicas.
  replicas: 1
  # -- Additional annotations for the controller object.
  annotations: {}
  # -- Additional labels for the controller object.
  labels: {}

service:
  enabled: true
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ''
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 64m
  # hosts:
  #   - host: paperless-example.local
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  tls: []
  #  - secretName: paperless-example-tls
  #    hosts:
  #      - fava-example.local

env:
  # -- Timezone for the container.
  - name: TZ
    value: UTC
  - name: PAPERLESS_OCR_LANGUAGE
    value: eng

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podSecurityContext:
  {}
  # fsGroup: 1000
  # runAsNonRoot: true
  # runAsGroup: 1000
  # runAsUser: 1000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  # -- Configure storage volume settings for the chart under this key.
  storage:
    enabled: false
    # existingClaim: ""

  # -- Configure export volume settings for the chart under this key.
  export:
    enabled: false
    # existingClaim: ""

  # -- Configure consume volume settings for the chart under this key.
  consume:
    enabled: false

# -- Enable and configure postgresql database subchart under this key.
#    If enabled, the app's db envs will be set for you.
#    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/postgresql)
# @default -- See [values.yaml](./values.yaml)
postgresql:
  enabled: false
  auth:
    database: paperless
    postgresPassword: paperless
  primary:
    persistence:
      enabled: false
      # storageClass: ""
      # size: 8Gi

# -- Enable and configure redis subchart under this key.
#    If enabled, the app's Redis env will be set for you.
#    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/redis)
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: false
  replica:
    replicaCount: 0

# -- Pod-level affinity. More info [here](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling).
affinity:
  {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: kubernetes.io/hostname
  #             operator: In
  #             values:
  #               - my-node-xyz

# -- Pod-level tolerations. More info [here](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling).
tolerations:
  []
  # - key: node-role.kubernetes.io/control-plane
  #   operator: Exists
  #   effect: NoSchedule
